<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Visualization on Algoritma Technical Blog</title>
    <link>https://algotech.netlify.com/tags/data-visualization/</link>
    <description>Recent content in Data Visualization on Algoritma Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://algotech.netlify.com/tags/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advancing Your Shiny Application II</title>
      <link>https://algotech.netlify.com/blog/advancing-your-shinyapp-ii/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/advancing-your-shinyapp-ii/</guid>
      <description>Shiny is a very convenient tool that helps us create an app using R. It provides a wide range of layouts and widgets that you can add to an app. Common features in shiny may have been explained in many tutorials and courses, but other features that are more advanced require more exploration from the users with only brief documentation. In this article, let’s discuss some advanced features in shiny that commonly asked by users that may help you build better app.</description>
    </item>
    
    <item>
      <title>Advancing Your Shiny Application</title>
      <link>https://algotech.netlify.com/blog/advancing-your-shinyapp/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/advancing-your-shinyapp/</guid>
      <description>Shiny is a very convenient tool that helps us create an app using R. It provides a wide range of layouts and widgets that you can add to an app. Common features in shiny may have been explained in many tutorials and courses, but other features that are more advanced require more exploration from the users with only brief documentation. In this article, let’s discuss some advanced features in shiny that commonly asked by users that may help you build better app.</description>
    </item>
    
    <item>
      <title>Social Network Analysis</title>
      <link>https://algotech.netlify.com/blog/social-network-analysis-in-r/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/social-network-analysis-in-r/</guid>
      <description>In this article, we will learn about Social Network Analysis using tidygraph (including igraph and ggraph). We’ll not only learn about the visualizing stuff but also the metrics. We’ll analyze Twitter network as our study case using rtweet package. In this article, I hope we will be able to do:
 Analyze Ego Network from specific account/user
 Analyze Information Activity Network from something that goes viral    Background Introduction What is Social Network Analysis (SNA)</description>
    </item>
    
    <item>
      <title>Rplicate Series: Bold Axis &amp; Character with ggplot2</title>
      <link>https://algotech.netlify.com/blog/rplicate-series-bold-axis-character-with-ggplot2/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/rplicate-series-bold-axis-character-with-ggplot2/</guid>
      <description>Welcome again to the Rplicate Series! In this 6th article of the series, we will replicate The Economist plot titled &amp;ldquo;Marvellous&amp;rdquo;. In the process, we will explore ways to use bold text and characters for our axes. Let&amp;rsquo;s dive in below!
Load Packages These are the packages and some set up that we will use.
library(tidyverse) # for data wrangling library(ggplot2) # for data visualization library(scales) # to customize axes in plot library(ggrepel) # add &amp;amp; customize repelled text library(grid) # create grid &amp;amp; enhance the layouting of plot library(gridExtra) library(png) # import plot to image library(extrafont) # font library # load font from local font_import() # type y when asked to import #&amp;gt; Importing fonts may take a few minutes, depending on the number of fonts and the speed of the system.</description>
    </item>
    
    <item>
      <title>Rplicate Series: Interactive Plot of Coronavirus Survey</title>
      <link>https://algotech.netlify.com/blog/rplicate-series-coronavirus-survey/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/rplicate-series-coronavirus-survey/</guid>
      <description>Welcome again to the Rplicate Series! In this 5th article of the series. On this occassion, we will try to replicate the first interactive plot from the FiveThirtyEight article titled How Americans View The Coronavirus Crisis And Trump’s Response. This time you’ll learn how to build an interactive plot using highcharter.
  Library and Setup Below is the required package that we will use during data wrangling and chart creation.</description>
    </item>
    
    <item>
      <title>Rplicate Series: Gone Baby Gone</title>
      <link>https://algotech.netlify.com/blog/rplicate-series-gone-baby-gone/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/rplicate-series-gone-baby-gone/</guid>
      <description>Welcome again to the Rplicate Series! In this 4th article of the series, we will replicate The Economist plot titled &amp;ldquo;Gone Baby Gone&amp;rdquo;. In the process, we will explore ways to use transformed value as our axes, adding horizontal/vertical line, and making an elbow line (and generally more flexible) annotation for repelled texts.
Let&amp;rsquo;s dive in below!
Load Packages These are the packages and some set up that we will use.</description>
    </item>
    
    <item>
      <title>Rplicate Series: I can&#39;t get no ...</title>
      <link>https://algotech.netlify.com/blog/rplicate-i-can-t-get-no/</link>
      <pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/rplicate-i-can-t-get-no/</guid>
      <description>In this third article on Rplicate Series, We will share to you one way to replicate The Economist plot titled &amp;ldquo;I can&amp;rsquo;t get no &amp;hellip;&amp;quot;. The plot making will also demonstrate ways to converting smooth line into linear line, using guides for legend, and adding a text annotation to a plot. The raw dataset used for this graph was obtained from a PDF, so we will also use tibble package to copy-paste the data into R.</description>
    </item>
    
    <item>
      <title>Rplicate Series: Cherry Bomb</title>
      <link>https://algotech.netlify.com/blog/rplicate-series-cherry-bomb/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/rplicate-series-cherry-bomb/</guid>
      <description>In this second article on Rplicate Series, We will share to you one way to replicate the plot titled Cherry Bomb from the article &amp;ldquo;Japan’s cherry blossoms are emerging increasingly early, 7th April 2017&amp;rdquo;. The raw dataset used for this graph was obtained from a phenological dataset that was previously collected by Dr. Yasuyuki Aono from Osaka Prefecture University12.
While replicating the plot, we will also learn how to:
 various data pre-processing tricks such as separate a column into several columns, create date data from several columns, and reverse levels of a categorical column create a scatterplot with a custom shape/image as points using geom_smooth() for visualizing trend in the data explore facets and various theme editing on ggplot2  Let&amp;rsquo;s dive in below!</description>
    </item>
    
    <item>
      <title>Rplicate Series: Happiness of The Third Age</title>
      <link>https://algotech.netlify.com/blog/rplicate-happiness-of-the-third-age/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/rplicate-happiness-of-the-third-age/</guid>
      <description>Have you ever wonder how far ggplot2 and other packages in R can go for data visualization? Here, we are introducing the Rplicate Series: a series of articles for data visualization in R using ggplot2 and other packages, in aim to replicate The Economist plot. The Economist is an international weekly newspaper that focuses on current affairs, international business, politics, and technology. Along with its article, various graphs were displayed with visuals that is captivating to the eye.</description>
    </item>
    
    <item>
      <title>Creating Choropleth with Mapshaper and R</title>
      <link>https://algotech.netlify.com/blog/creating-choropleth-with-mapshaper-and-r/</link>
      <pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/creating-choropleth-with-mapshaper-and-r/</guid>
      <description>Geospatial is one of the important things in data processing. With geospatial, we can provide information only with the help of maps so that information can be conveyed properly.
There are many types of geospatial that we can do, such as Dot Map, Connection Map, Choropleth, Hexbin Map, and Bubble Map1. Each type of geospatial has its own function, and each of these types also requires different types of information/data.</description>
    </item>
    
    <item>
      <title>Twitter Interactions Analysis using Twinetverse</title>
      <link>https://algotech.netlify.com/blog/twitter-interactions-analysis-using-twinetverse/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://algotech.netlify.com/blog/twitter-interactions-analysis-using-twinetverse/</guid>
      <description>Introduction The goal of the twinetverse is to provide everything one might need to view Twitter interactions, from data collection to visualisation. This could be a powerful tool for social media analysis, since it could help visualizing how users communicate with one another on a given topic or how information spreads throughout the Twitter network.</description>
    </item>
    
  </channel>
</rss>
